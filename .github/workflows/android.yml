name: Android Instrumented Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  androidTest:
    name: Run Instrumented Tests
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Accept Android SDK Licenses
        run: yes | sdkmanager --licenses

      - name: Install emulator
        run: |
          sdkmanager "system-images;android-30;google_apis;x86_64"
          sdkmanager "platform-tools" "emulator"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --device "pixel"

      - name: Start emulator
        run: |
          nohup emulator -avd test -no-snapshot -no-window -no-audio -gpu swiftshader_indirect -no-boot-anim -port 5554 > emulator.log 2>&1 &
          # Aguarda até o ADB reconhecer o dispositivo
          adb wait-for-device
          # Verifica se o boot foi concluído
          boot_completed=""
          export PATH=$PATH:$ANDROID_HOME/platform-tools
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
            echo "Waiting for emulator to fully boot..."
            sleep 5
          done
          echo "Emulator booted."

      - name: Run connected Android tests
        run: ./gradlew connectedDebugAndroidTest

      - name: Upload test results (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/reports/androidTests/connected/
